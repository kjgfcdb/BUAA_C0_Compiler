const int c1=-5,c2=0,c3=6;
const char c4='a',c5='-',c6='*';
int a1,a2,a,f[5];
char d1,d2,d,g[6];
int f1(int a,char b) {
    return (1+a);
}
char f2(int a,char b) {
    int i,j,k;
    char c,d;
    i=+0;
    j=-12;
    k=+320;
    a='-';
    b='2';
    c='/';
    d='_';
    return ('a');
}
int recursion(int i) {
    if(i==1)
        return (1);
    else
        return (i+recursion(i-1));
}
void f3() {
    int i,j,k,m,s[2];
    char a,d[2];
    s[0]=0;
    ;
    s[1]=s[0]+5;
    d[0]='1';
    d[1]='2';
    i=1;
    j=++2;
    k=+-3;
    a=d[1];
    m=-(-((i+j)*(k-j)-(s[0]-s[1]))/((d[0]+j)+a))*i-a/-3;
    printf(m);
    k=f1(i,a);
}
void main() {
    const int p=1;
    const char c0='c';
    int i,j,k[5],tot;
    char a;
    scanf(i,j);
    a='a';
    if(i==0) printf("i=0");
    else printf("i!=0");
    if(j) printf("j!=0");
    i=2;
    j=0;
    for (tot=0;i>0;tot=tot+1){
        i=i-1;
        k[j]=i;
        j=j+1;
    }
    scanf(j);
    for (i=0; i<j; i=i+1) {
        printf(i+j);
    }
    i=f1(j+i,'a');
    printf(i);
    a=f2(i,c0);
    printf(a);
    f3();
    i=recursion(1);
    printf(i);
    i=recursion(3);
    printf(i);
    return;
}
